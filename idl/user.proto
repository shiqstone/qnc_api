syntax = "proto3";

package user;

import "api.proto";
import "common.proto";

option go_package = "basic/user";

message UserRegisterRequest {
  string username = 1; // registered user name
  string password = 2;
}

message UserRegisterResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"'];
  string status_msg = 2;
  int64 uid = 3; // user id
  string token = 4; // user authentication token
}

message UserLoginRequest {
  string username = 1; // Login Username
  string password = 2; // login password
}

message UserLoginResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"'];
  string status_msg = 2;
  int64 uid = 3;
  string token = 4;
}

message UserRequest {
  int64 uid = 1;
  string token = 2;
}

message UserResponse {
  int32 status_code = 1[(api.go_tag)='json:"status_code"'];
  string status_msg = 2;
  User user = 3; // User Info
}

service UserHandler {
  rpc User(UserRequest) returns(UserResponse) {
    option (api.get) = "//user/";
  }

  rpc UserRegister(UserRegisterRequest) returns(UserRegisterResponse) {
    option (api.post) = "//user/register/";
    // When a new user registers, just provide a user name, password, and nickname, and the user name needs to be unique.
    // After successful creation, return the user id and permission token.
  }

  rpc UserLogin(UserLoginRequest) returns(UserLoginResponse) {
    option (api.post) = "//user/login/";
    // Log in with username and password, and return user id and permission token after successful login.
  }
}

